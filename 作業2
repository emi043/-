#include <LiquidCrystal.h>//使用LiquidCrystal函式庫
// select the pins used on the LCD panel
LiquidCrystal lcd(8,9,4,5,6,7);

// 依照行、列排列的按鍵字元（二維陣列）
char KeyMap[4][4]={
                     {'1','2','3','A'},
                     {'4','5','6','B'},
                     {'7','8','9','C'},
                     {'*','0','#','D'}};
const byte rowPins[4] = {10,11,12,13};//  設定「列」腳位
const byte colPins[4] = {A0,A1,A2,A3};//  設定「行」腳位
byte r,c,i;      // 暫存迴圈的索引數字
byte scanVal;   // 暫存掃描到的按鍵值
int n=0;        // LCM游標位置變數
void setup() {
  lcd.begin(16, 2);// 初始化 LCD，一行 16 的字元，共 2 行  
  lcd.setCursor(0,0);// 設定游標位置在第一行行首
  lcd.print("4080E009");//顯示學號在LCM
  lcd.setCursor(0,1);// 設定游標位置在第二行行首
  for (i = 0; i <= 3; i++) {
    pinMode(rowPins[i], INPUT);
    pinMode(colPins[i], OUTPUT);}}

void loop() {
  // put your main code here, to run repeatedly:
  byte Row=0, Col=0; //被按下的按鍵在迴圈值
  if(keyscan()==true){ //第一次掃描如果有按鍵被按下繼續檢查第二次
    Row=r;Col=c;//讀取迴圈值
    delay(5);
    //第二次掃描按鍵如果有按鍵被按下且位置一樣表示非雜訊產生而是真正按下按鍵
    if ((keyscan()==true) && (Row==r)&&(Col==c)){
      lcd.setCursor(n,1);// 設定游標位置在第二行行首
      lcd.print(KeyMap[r][c]);//讀取陣列值顯示在LCM  
      digitalWrite(A0,LOW);
      digitalWrite(A1,LOW);
      digitalWrite(A2,LOW);
      digitalWrite(A3,LOW);
      delayMicroseconds(100);
      n=n+1;//LCM位置變數+1
      if (n>15){//判斷LCM是否顯示到底
        n=0;}
      while( (digitalRead(10)==LOW) || (digitalRead(11)==LOW)||(digitalRead(12)==LOW) || (digitalRead(13)==LOW));
      }}}  
    
bool keyscan( )
{
  for (r = 0; r <= 3; r++) {
    for (c = 0; c <= 3; c++) {
      digitalWrite(colPins[c], LOW);
      delayMicroseconds(100);// 掃描按鍵的間隔時間
      scanVal = digitalRead(rowPins[r]);
      if (scanVal == LOW) {    // 如果按鍵是「低電位」
      digitalWrite(colPins[c], HIGH);
      return(true);//回傳trueru，結束keyscan( )
      break;}       // 跳出迴圈
    digitalWrite(colPins[c], HIGH);}}
  return(false);}//回傳false，結束keyscan( )
